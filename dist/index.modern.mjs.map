{"version":3,"file":"index.modern.mjs","sources":["../src/tools/Tools.js","../src/providers/ABCProvider.js","../src/interceptors/Interceptors.js"],"sourcesContent":["import URL from \"url-parse\";\n\nfunction mapUrls(url, urlMappings) {\n    if (urlMappings[url]) {\n        return urlMappings[url];\n    }\n    return url;\n}\n\nfunction addQuarantineSegmentToUrl(originalUrl, quarantineSegment = \"\") {\n    if (quarantineSegment === \"\") return originalUrl;\n\n    // Parse the original URL\n    const url = new URL(originalUrl);\n\n    // Insert the quarantine segment after the domain in the pathname\n    url.pathname = `/${quarantineSegment}${url?.pathname}`;\n    console.log(\"[addQuarantineSegmentToUrl]\", url);\n    // Get the modified URL\n    const modifiedUrl = url.toString();\n\n    return modifiedUrl;\n}\n\nfunction mergeHeaders(originalHeaders = {}, newHeaders = {}) {\n    // Get the modified headers\n    const modifiedHeaders = merge(originalHeaders, newHeaders);\n    console.log(modifiedHeaders, \"[mergeHeaders]\");\n\n    return modifiedHeaders;\n}\n\nfunction groupByPrefixAndStructure(data) {\n    let grouped = {};\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n            const parts = key.split(\"-\");\n            const prefix = parts[0];\n            const valueObject = data[key];\n\n            if (!grouped[prefix]) {\n                grouped[prefix] = {};\n            }\n\n            if (prefix === \"api\") {\n                const defaultValue = valueObject.defaultValue;\n                const result = valueObject.result;\n                grouped[prefix][defaultValue] = result; // Use \"defaultValue\" as key and \"result\" as value for \"api\" prefix\n            } else if (prefix === \"response\") {\n                // const defaultValue = valueObject.defaultValue.url;\n                const result = valueObject.result;\n                // grouped[prefix][defaultValue] = result;\n\n                grouped[prefix] = {\n                    ...grouped[prefix],\n                    ...result,\n                };\n            } else if (prefix === \"context\") {\n                const keyWithoutPrefix = parts.slice(1).join(\"-\"); // Remove the prefix\n                const result = valueObject.result;\n                console.log(keyWithoutPrefix, result, \"contexttttttt\");\n\n                //   grouped[prefix][keyWithoutPrefix] = result; // Remove prefix and use \"result\" as value for other prefixes\n                grouped = {\n                    ...grouped,\n                    ...result,\n                };\n                // grouped[prefix] = {\n                //     ...grouped[prefix],\n                //     ...result\n                // }; // Remove prefix and use \"result\" as value for other prefixes\n            }\n        }\n    }\n\n    console.log(grouped, \"yyyyyyyyyyyyyyyyyyyy\");\n    return grouped;\n}\n\nexport {\n    mergeHeaders,\n    addQuarantineSegmentToUrl,\n    groupByPrefixAndStructure,\n    mapUrls\n}","import React, {\n    useEffect, useState,\n    useMemo,\n    useCallback, Children, cloneElement\n  } from \"react\";\n  \nimport {\n    GrowthBook,\n    GrowthBookProvider,\n    useFeatureValue,\n    useFeatureIsOn,\n    useFeature,\n    useGrowthBook,\n  } from \"@growthbook/growthbook-react\";\n\n  import {\n    groupByPrefixAndStructure\n  } from \"../tools\"\n  // Function to group objects based on prefix and structure  \n  \n  const ABCProvider = ({ children, getModel, updateModel, model }) => {\n    const {\n      misc: { \n        iamABCTester, \n        abcScope, \n        abcEndpoint,\n        abcEnable,\n        abcSdk,\n        abcTimeout = 30000\n     },\n    } = getModel([\"misc\"]);\n  \n    console.log(iamABCTester, abcScope, abcSdk, \"[ABCProvider] iamABCTester\", abcEnable);\n  \n    const [isReady, setIsReady] = useState(false);\n  \n    const arrayChildren = Children.toArray(children);\n  \n    const gb = useMemo(\n      () => {\n        if (iamABCTester) {\n          console.log(iamABCTester, \"iamABCTesteriamABCTester useMemo\");\n          const gb = new GrowthBook({\n            apiHost: abcEndpoint, //\"https://growthbook-api-dev.maybanksandbox.com/\",\n            clientKey: abcSdk, //\"sdk-cAC7AQGd1GAEedY\",\n            // Enable easier debugging during development\n            // enableDevMode: true,\n            // Update the instance in realtime as features change in GrowthBook\n            // subscribeToChanges: true,\n            // Only required for A/B testing\n            // Called every time a user is put into an experiment\n            // trackingCallback: (experiment, result) => {\n            //   console.log(\"Experiment Viewed\", {\n            //     experimentId: experiment.key,\n            //     variationId: result.key,\n            //   });\n            // },\n            // onFeatureUsage: (featureKey, result) => {\n            //   console.log(\"feature\", featureKey, \"has value\", result.value);\n            // },\n          });\n          return gb;\n        }\n      },\n      [abcEndpoint, iamABCTester]\n    );\n  \n    useEffect(() => {\n      if (iamABCTester && model.misc.abcEnable) {\n        gb.loadFeatures({\n            timeout: abcTimeout,\n        }).then(() => {\n          setIsReady(true);\n        });\n      }\n    }, [model.misc.abcEnable, model.misc.iamABCTester]);\n  \n    const evaluateFeatures = () => {\n      if (iamABCTester && model.misc.abcEnable) {\n        allFeatures = gb.getFeatures();\n        console.log(iamABCTester, \"evaluateFeatures gbs\", allFeatures);\n  \n        let done = {};\n        Object.keys(allFeatures).map((key) => {\n          console.log(key, \"inside itemmmmmmmz ;) ->>>>>\", allFeatures[key]);\n          const result = gb.getFeatureValue(key, allFeatures[key].defaultValue);\n          done[key] = {\n            defaultValue: allFeatures[key].defaultValue,\n            result,\n          };\n          console.log(key, result, \"inside <<<<<<------ result\");\n        });\n  \n        console.log(done, \"done itemmmmmmmz ;) result\");\n  \n        // Call the function to group by prefix\n        groupedData = groupByPrefixAndStructure(done);\n  \n        console.log(\"sssssssss group abc abc yasser\", groupedData);\n  \n        updateModel({ ...groupedData });\n      }\n    };\n  \n    useEffect(() => {\n      if (!isReady) {\n        return;\n      }\n  \n    //   gb.setAttributes({\n    //     did: \"scope\",\n    //   });\n  \n      evaluateFeatures();\n      console.log(\"evaluateFeatures\");\n    }, [isReady, model.misc.iamABCTester]);\n  \n    console.log(\"NavigationContainer mounted\", iamABCTester);\n  \n    const renderChild  = () => {\n        return Children.map(arrayChildren, (child, index) => {\n            console.log(index, \"44444444444444\");\n            return cloneElement(child, {});\n          })\n    }\n\n    return (\n        // !model.misc.abcEnable && renderChild() ||\n      <GrowthBookProvider growthbook={gb}>\n        {Children.map(arrayChildren, (child, index) => {\n          console.log(index, \"44444444444444\");\n          return cloneElement(child, {});\n        })}\n      </GrowthBookProvider>\n    );\n  };\n  \n  export default ABCProvider;\n  \n  // import styles from './styles.module.css'\n  \n  // // export const ExampleComponent = ({ text }) => {\n  // //   return <div className={styles.test}>    yasser ;) Component: {text}</div>\n  // // }\n  \n  // import React,\n  // {\n  //   useEffect,\n  //   useState,\n  //   useCallback,\n  //   Children, \n  //   cloneElement\n  // } from 'react';\n  // import {\n  //   GrowthBook,\n  //   GrowthBookProvider,\n  //   useFeatureValue,\n  //   useFeatureIsOn,\n  //   useFeature,\n  //   useGrowthBook,\n  // } from \"@growthbook/growthbook-react\";\n  // // import CustomABC from \"./CustomABC\";\n  \n  // // Create a GrowthBook instance\n  // const gb = new GrowthBook({\n  //   apiHost: \"https://growthbook-api-dev.maybanksandbox.com\",\n  //   clientKey: \"sdk-cAC7AQGd1GAEedY\",\n  //   // Enable easier debugging during development\n  //   enableDevMode: true,\n  //   // Update the instance in realtime as features change in GrowthBook\n  //   subscribeToChanges: true,\n  //   // Only required for A/B testing\n  //   // Called every time a user is put into an experiment\n  //   trackingCallback: (experiment, result) => {\n  //     console.log(\"Experiment Viewed\", {\n  //       experimentId: experiment.key,\n  //       variationId: result.key,\n  //     });\n  //   },\n  //   onFeatureUsage: (featureKey, result) => {\n  //     console.log(\"feature\", featureKey, \"has value\", result.value);\n  //   },\n  // });\n  \n  // // Function to group objects based on prefix and structure\n  // function groupByPrefixAndStructure(data) {\n  //   let grouped = {};\n  \n  //   for (const key in data) {\n  //     if (data.hasOwnProperty(key)) {\n  //       const parts = key.split(\"-\");\n  //       const prefix = parts[0];\n  //       const valueObject = data[key];\n  \n  //       if (!grouped[prefix]) {\n  //         grouped[prefix] = {};\n  //       }\n  \n  //       // switch (prefix) {\n  //       //     case \"api\":\n  //       //         const defaultValue = valueObject.defaultValue;\n  //       //         // const result = valueObject.result;\n  //       //         grouped[prefix][defaultValue] = valueObject.result;\n  //       //         break;\n  //       //     case \"response\":\n  //       //         // const result = valueObject.result;\n  //       //         // grouped[prefix][defaultValue] = result;\n  \n  //       //         grouped[prefix] = {\n  //       //             ...grouped[prefix],\n  //       //             ...valueObject.result,\n  //       //         };\n  //       //         break;\n  \n  //       //     case \"context\":\n  //       //         const keyWithoutPrefix = parts.slice(1).join(\"-\"); // Remove the prefix\n  //       //         // const result = valueObject.result;\n  //       //         //   grouped[prefix][keyWithoutPrefix] = result; // Remove prefix and use \"result\" as value for other prefixes\n  //       //         grouped = {\n  //       //             ...grouped,\n  //       //             ...valueObject.result,\n  //       //         };\n  //       //         break;\n  \n  //       //     case \"quarantine\":\n  //       //         console.log(valueObject,\"valueObject quarantine\", valueObject.result)\n  //       //         grouped = {\n  //       //             ...grouped,\n  //       //             quarantine: \"yasser\"//valueObject.result && \"true\" || \"false\",\n  //       //         };\n  \n  //       //         break;\n  //       // }\n  \n  //       if (prefix === \"api\") {\n  //         const defaultValue = valueObject.defaultValue;\n  //         const result = valueObject.result;\n  //         grouped[prefix][defaultValue] = result; // Use \"defaultValue\" as key and \"result\" as value for \"api\" prefix\n  //       } else if (prefix === \"response\") {\n  //         // const defaultValue = valueObject.defaultValue.url;\n  //         const result = valueObject.result;\n  //         // grouped[prefix][defaultValue] = result;\n  \n  //         grouped[prefix] = {\n  //           ...grouped[prefix],\n  //           ...result,\n  //         };\n  //       } else if (prefix === \"context\") {\n  //         const keyWithoutPrefix = parts.slice(1).join(\"-\"); // Remove the prefix\n  //         const result = valueObject.result;\n  //         console.log(keyWithoutPrefix, result, \"contexttttttt\");\n  \n  //         //   grouped[prefix][keyWithoutPrefix] = result; // Remove prefix and use \"result\" as value for other prefixes\n  //         grouped = {\n  //           ...grouped,\n  //           ...result,\n  //         };\n  //         // grouped[prefix] = {\n  //         //     ...grouped[prefix],\n  //         //     ...result\n  //         // }; // Remove prefix and use \"result\" as value for other prefixes\n  //       }\n  //     }\n  //   }\n  \n  //   console.log(grouped, \"yyyyyyyyyyyyy43424sss3yyyyyyy\");\n  //   return grouped;\n  // }\n  \n  // const ABCProvider = ({ children, getModel, updateModel, model }) => {\n  \n  //   const {\n  //     misc: {\n  //       iamABCTester,\n  //     }\n  //   } = getModel([\n  //     \"misc\"\n  //   ]);\n  \n  //   let allFeatures = {};\n  //   let groupedData = {};\n  \n  //   console.log(iamABCTester,\"iamABCTesteriamABCTester\")\n  \n  //   const [isReady, setIsReady] = useState(false);\n  \n  //   const arrayChildren = Children.toArray(children);\n  \n  //   useEffect(() => {\n  //     if(iamABCTester){\n  //       gb.loadFeatures().then(response => {\n  //         console.log('yasssereeeeee', response);\n  //         setIsReady(true);\n  //       })\n  //     }\n     \n  //     // Load feature definitions from GrowthBook API\n  //     // fetch(\n  //     //   'https://growthbook-api-dev.maybanksandbox.com/api/features/sdk-cAC7AQGd1GAEedY',\n  //     // ).then(response => response.json())\n  //     //   .then(data => {\n  //     //     console.log('yassser', data)\n  //     //     gb.setFeatures(data.features);\n  //     //     updateLoaded(data.features)\n  //     //   })\n  //     //   .catch(error => console.error(error,'errrrorrororor'))\n  //     //   .finally(() => {\n  //     //     setIsReady(true);\n  //     //   });\n  //   }, [model.misc]);\n      \n  //   const evaluateFeatures = () => {\n  //     allFeatures = gb.getFeatures();\n  \n  //     console.log(iamABCTester,'evaluateFeatures gbs', allFeatures);\n  \n  //     if (iamABCTester) {\n  //       // const growthbook = useGrowthBook();\n  \n  //       // allFeatures = gb.getFeatures();\n  //       console.log(allFeatures, \"evaluateFeatures gbs xyz\");\n  \n  //       let done = {};\n  //       Object.keys(allFeatures).map((key) => {\n  //         console.log(key, \"inside itemmmmmmmz ;) ->>>>>\",allFeatures[key]);\n  //         const result = gb.getFeatureValue(key, allFeatures[key].defaultValue);\n  //         done[key] = {\n  //           defaultValue: allFeatures[key].defaultValue,\n  //           result,\n  //         };\n  //         console.log(key, result, \"inside <<<<<<------ result\");\n  //       });\n  \n  //       console.log(done, \"done itemmmmmmmz ;) result\");\n  \n  //       // Call the function to group by prefix\n  //       groupedData = groupByPrefixAndStructure(done);\n  \n  //       console.log(\"sssssssss group abc abc yasser\", groupedData);\n  //       updateModel({...groupedData})\n  //     }\n  //   };\n  \n  //   useEffect(() => {\n  //     if (!isReady) {\n  //       return;\n  //     }\n  \n  //     gb.setAttributes({\n  //       did: \"yasser\",\n  //     });\n  \n  //     evaluateFeatures();\n  //     console.log('evaluateFeatures');\n  //   }, [isReady, model.misc]);\n  \n  //   console.log('NavigationContainer mounted', iamABCTester);\n  \n  //   return (\n  //     <GrowthBookProvider growthbook={gb}>\n  //       {\n  //         Children.map(arrayChildren, (child, index) => {\n  //           console.log(index,'444444444444443')\n  //           return cloneElement(child, {\n  //             // isReady,\n  //           })\n  //         })\n  //       }\n  //     </GrowthBookProvider>\n  //   );\n  // };\n  \n  // export default ABCProvider;","import { get, merge } from \"lodash\";\n\nimport {\n    mergeHeaders,\n    addQuarantineSegmentToUrl,\n    mapUrls\n} from \"../tools\"\n\nfunction responseInterceptor({ getModel, response }) {\n    // Modify the response data here mapUrls\n    // const { getModel } = ApiManager.context.controller;\n    try {\n        const dictionary = getModel([\"response\"])?.response || {};\n        const responseUrl = response.config.url;\n\n        response = merge(response, mapUrls(responseUrl, dictionary));\n        console.log(\"[responseInterceptor] Request URL:\", responseUrl);\n        console.log(\"[responseInterceptor] context\", getModel([\"response\"])?.response);\n        console.log(\"[responseInterceptor] data\", response?.data);\n        return response;\n    } catch(error) {\n        console.log('[responseInterceptor]', error)\n        return response\n    }\n}\nfunction requestInterceptor({ getModel, request }) {\n    // Modify the response data here mapUrls\n    try {\n        const dictionary = getModel([\"api\"])?.api || {};\n        const requests = getModel(\"requests\") || {\n            //to check whether \n            //requires merging the header for request or not\n            enabled: false,\n            headers: {},\n            //the prefix to be merged with endpoint path\n            //example: www.domain.com/prefix/api/example\n            prefix: \"\",\n        };\n\n        //to replace the url with alternative from abc\n        request.url = mapUrls(request.url, dictionary);\n        if (requests.enabled) {\n            //merge prefix with url\n            request.url = addQuarantineSegmentToUrl(request.url, requests.prefix);\n            //merge existing header with new one\n            // request.headers = mergeHeaders(request.headers, {\n            //     ...requests?.headers,\n            // });\n        }\n        console.log(\n            requests,\n            request?.headers,\n            requests?.enabled,\n            request?.url,\n            \"[requestInterceptor] details\"\n        );\n        return request;\n    } catch(error) {\n        console.log('[requestInterceptor] error:',error)\n        return request\n    }\n}\n\nexport {\n    requestInterceptor,\n    responseInterceptor\n}"],"names":["mapUrls","url","urlMappings","addQuarantineSegmentToUrl","originalUrl","quarantineSegment","URL","pathname","console","log","modifiedUrl","toString","groupByPrefixAndStructure","data","grouped","key","hasOwnProperty","parts","split","prefix","valueObject","defaultValue","result","_extends","keyWithoutPrefix","slice","join","ABCProvider","children","getModel","updateModel","model","misc","iamABCTester","abcScope","abcEndpoint","abcEnable","abcSdk","abcTimeout","isReady","setIsReady","useState","arrayChildren","Children","toArray","gb","useMemo","GrowthBook","apiHost","clientKey","useEffect","loadFeatures","timeout","then","evaluateFeatures","allFeatures","getFeatures","done","Object","keys","map","getFeatureValue","groupedData","React","createElement","GrowthBookProvider","growthbook","child","index","cloneElement","responseInterceptor","response","_getModel","_getModel2","_response","dictionary","responseUrl","config","merge","error","requestInterceptor","request","_getModel3","api","requests","enabled","headers"],"mappings":"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AY,CAACF,KAAK,EAAE,EAAE,CAAC,CAAA;AAChC,KAAC,CACiB,CAAA;AAAC,IAAA;AAEzB,EAAC;;AAID;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AC5WF,SAASG,mBAAmBA,CAAC;EAAEzC,QAAQ;AAAE0C,EAAAA,QAAAA;AAAS,CAAC,EAAE;AACjD;AACA;EACA,IAAI;AAAA,IAAA,IAAAC,SAAA,EAAAC,UAAA,EAAAC,SAAA,CAAA;AACA,IAAA,MAAMC,UAAU,GAAG,CAAA,CAAAH,SAAA,GAAA3C,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,KAAtB2C,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAA,CAAwBD,QAAQ,KAAI,EAAE,CAAA;AACzD,IAAA,MAAMK,WAAW,GAAGL,QAAQ,CAACM,MAAM,CAAC5E,GAAG,CAAA;IAEvCsE,QAAQ,GAAGO,KAAK,CAACP,QAAQ,EAAEvE,OAAO,CAAC4E,WAAW,EAAED,UAAU,CAAC,CAAC,CAAA;AAC5DnE,IAAAA,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEmE,WAAW,CAAC,CAAA;AAC9DpE,IAAAA,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAA,CAAAgE,UAAA,GAAE5C,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,qBAAtB4C,UAAA,CAAwBF,QAAQ,CAAC,CAAA;AAC9E/D,IAAAA,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAAiE,CAAAA,SAAA,GAAEH,QAAQ,KAARG,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAA,CAAU7D,IAAI,CAAC,CAAA;AACzD,IAAA,OAAO0D,QAAQ,CAAA;GAClB,CAAC,OAAMQ,KAAK,EAAE;AACXvE,IAAAA,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEsE,KAAK,CAAC,CAAA;AAC3C,IAAA,OAAOR,QAAQ,CAAA;AACnB,GAAA;AACJ,CAAA;AACA,SAASS,kBAAkBA,CAAC;EAAEnD,QAAQ;AAAEoD,EAAAA,OAAAA;AAAQ,CAAC,EAAE;AAC/C;EACA,IAAI;AAAA,IAAA,IAAAC,UAAA,CAAA;AACA,IAAA,MAAMP,UAAU,GAAG,CAAA,CAAAO,UAAA,GAAArD,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,KAAjBqD,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAA,CAAmBC,GAAG,KAAI,EAAE,CAAA;AAC/C,IAAA,MAAMC,QAAQ,GAAGvD,QAAQ,CAAC,UAAU,CAAC,IAAI;AACrC;AACA;AACAwD,MAAAA,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;AACX;AACA;AACAnE,MAAAA,MAAM,EAAE,EAAA;KACX,CAAA;;AAED;IACA8D,OAAO,CAAChF,GAAG,GAAGD,OAAO,CAACiF,OAAO,CAAChF,GAAG,EAAE0E,UAAU,CAAC,CAAA;IAC9C,IAAIS,QAAQ,CAACC,OAAO,EAAE;AAClB;AACAJ,MAAAA,OAAO,CAAChF,GAAG,GAAGE,yBAAyB,CAAC8E,OAAO,CAAChF,GAAG,EAAEmF,QAAQ,CAACjE,MAAM,CAAC,CAAA;AACrE;AACA;AACA;AACA;AACJ,KAAA;;IACAX,OAAO,CAACC,GAAG,CACP2E,QAAQ,EACRH,OAAO,IAAPA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAEK,OAAO,EAChBF,QAAQ,oBAARA,QAAQ,CAAEC,OAAO,EACjBJ,OAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEhF,GAAG,EACZ,8BACJ,CAAC,CAAA;AACD,IAAA,OAAOgF,OAAO,CAAA;GACjB,CAAC,OAAMF,KAAK,EAAE;AACXvE,IAAAA,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAACsE,KAAK,CAAC,CAAA;AAChD,IAAA,OAAOE,OAAO,CAAA;AAClB,GAAA;AACJ;;;;"}